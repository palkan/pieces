{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/core/utils/index.js","src/core/utils/object.js","src/core/utils/string.js","src/index.js","src/version.js"],"names":[],"mappings":"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","file":"build.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export * from './string'\nexport * from './object'","'use strict'\n\n/**\n * Extend object with another object.\n * By default it doesn't overwrite existing keys.\n * To overwrite existing keys set `overwrite` option to `true`.\n * \n * You can whitelist/blacklist keys to inject using `only`/`except` option.\n *\n * @example \n *  extend({ a: 1 }, { a: 2, b: 3 }) #=> { a: 1, b: 3 }\n *  extend({ a: 1 }, { a: 2, b: 3 }, { overwrite: true }) #=> { a: 2, b: 3 }\n *  extend({ a: 1 }, { a: 2, b: 3, c: 4 }, { except: ['c']}) #=> { a: 1, b: 3 }\n *  extend({ a: 1 }, { a: 2, b: 3, c: 4 }, { only: ['b']}) #=> { a: 1, b: 3 }\n *\n * @param {Object} target Object to extend\n * @param {Object} mixin Object to be mixed in\n * @param {Object} [options]\n * @return {Object}\n */\n\nexport function extend(target, mixin, options = {}){\n  for(let key of Object.keys(mixin)){\n    if(!options.overwrite && target.hasOwnProperty(key)) continue \n    \n    if(\n      options.only && (options.only.indexOf(key) === -1) ||\n      options.except && (options.except.indexOf(key) > -1)\n    ) continue\n\n    target[key] = mixin[key]\n  }\n  return target\n}\n\n\n/**\n* Add specified keys from source to target.\n* Support filtering for nested objects.\n*\n*\n* @example\n*   extract_to({}, { a: 1, b: 2}, ['a']) #=> { a: 1 }\n*   extract_to({}, { a: 1, b: { x: 2, z: 3 }}, [{ b: 'x' }]) #=> { b: { x: 2 } }\n*\n* @param {Object} target\n* @param {Object} source\n* @param {Array} params\n*/\nfunction extract_to(data, source, params){\n  if(!source) return\n\n  if(Array.isArray(source)){\n    if(!Array.isArray(data)) data = []\n    source.forEach((el) => {\n      data.push(extract_to({}, el, params))\n    })\n    return data\n  }else{\n    if(typeof params === 'string'){\n      if(source.hasOwnProperty(params)) data[params] = source[params]\n      return data[params] \n    }\n    else if(Array.isArray(params)){\n      params.forEach((p) => {\n        extract_to(data, source, p)\n      })\n    }else{\n      for(let key of Object.keys(params)){\n        if(!params.hasOwnProperty(key)) continue\n        Array.isArray(source[key]) ? (data[key] = []) : (data[key] = {})\n        extract_to(data[key], source[key], params[key])\n      }\n    }\n    return data\n  }\n}\n\n\n/**\n* Create new object from source containing only specified keys.\n* Support filtering for nested objects.\n*\n*\n* @example\n*   extract({ a: 1, b: 2}, ['a']) #=> { a: 1 }\n*   extract({ a: 1, b: { x: 2, z: 3 }}, [{ b: 'x' }]) #=> { b: { x: 2 } }\n*\n* @param {Object} source\n* @param {Array} params\n* @return {Object}\n*/\nexport function extract(source, params){\n  var data = {}\n  extract_to(data, source, params)\n  return data\n}\n\n\n/**\n* Clone anything: from primitives to objects, Date, RegExp, Element.\n*\n* @param {*} obj\n* @return {*}\n*/\nexport function clone(obj){\n  if(\n    (obj == void 0) || typeof obj != 'object'\n    ) return obj\n\n  if(obj instanceof Date) return new Date(obj.getTime()) \n\n  if(obj instanceof RegExp){\n    var flags = ''\n    if(obj.global) flags += 'g'\n    if(obj.ignoreCase) flags += 'i'\n    if(obj.multiline) flags += 'm'\n    if(obj.sticky) flags += 'y'\n    return new RegExp(obj.source, flags) \n  }\n\n  if(obj instanceof Element) return obj.cloneNode(true)\n\n  if(typeof obj.clone === 'function') return obj.clone()\n\n  newInstance = new obj.constructor()\n\n  for(key of Object.keys(obj)){\n    newInstance[key] = clone(obj[key])\n  }\n\n  return newInstance\n}\n","'use strict'\n\n/**\n * Return unique string with prefix (if provided)\n * \n * @example \n *  uid() #=> \"101\"\n *  uid() #=> \"102\" \n *  uid(\"pre\") #=> \"pre103\"\n *\n * @param {String} [pref]\n * @return {String}\n */\n\nvar _uniq_id = 100\n\nexport function uid(pref = ''){\n  return `${pref}${++_uniq_id}`\n}\n\n/**\n * Convert string from underscore to camel case\n * \n * @example \n *  camelize('my_name') #=> \"MyName\"\n *\n * @param {String} str\n * @return {String}\n */\n\nfunction toUp(m, p1, p2){\n  let str = p1 || p2;\n  return str ? str.toUpperCase() : ''\n}\n\nexport function camelize(str){\n  return (''+str).replace(/(?:^(\\w)|_(\\w))/g, toUp)\n}\n\n/**\n * Convert the first letter of a string to upper case\n * \n * @example \n *  capitalize('my name') #=> \"My name\"\n *\n * @param {String} str\n * @return {String}\n */\n\nexport function capitalize(str){\n  if(!str) return\n  return str.substring(0, 1).toUpperCase() + str.substring(1)\n}\n\n/**\n * Convert string to underscore from came case\n * \n * @example \n *  underscore('MyName') #=> \"my_name\"\n *  underscore('myName') #=> \"my_name\"\n *\n * @param {String} str\n * @return {String}\n */\n\nfunction toSnake(m, p, offset, string){\n  return offset+p.length == string.length ? p.toLowerCase() : p.toLowerCase()+'_'\n}\n\nconst notsnake_rxp = /((?:^[^A-Z]|[A-Z])+[^A-Z]*)/g\n\nexport function underscore(str){\n  return (''+str).replace(notsnake_rxp, toSnake)\n}\n\n/**\n * Serialize string\n *\n * @example\n *   serialize('null') #=> null\n *   serialize('1.2') #=> 1.2\n *   serialize('true') #=> true\n * \n * @param {String} str\n * @return {*}\n */\n\nexport function serialize(str){\n  if(str == void(0)) return null\n  str = ''+str\n  switch(str.toLowerCase().trim()){\n    case 'null': return null\n    case 'undefined': return undefined\n    case 'true': return true\n    case 'false': return false\n    case '': return ''\n    default: \n      let val = Number(str)\n      return isNaN(val)\n             ? str\n             : val\n  }\n}\n\n/**\n * Strip quotes from a string (or do nothing if no quotes found)\n *\n * @param {String} str\n * @return {String}\n */\n\nexport function strip_quotes(str){\n  var a = str.charCodeAt(0)\n  var b = str.charCodeAt(str.length - 1)\n  return a === b && (a === 0x22 || a === 0x27)\n    ? str.slice(1, -1)\n    : str\n}\n\n/**\n * Replace double spaces with single space\n *\n * @param {String} str\n * @return {String}\n */\n\nexport function squish(str){\n  return (''+str).trim().replace(/\\s+/g,' ')\n}\n","import * as _ from './core/utils'\nimport {VERSION} from './version'\n\nexport function pi(){\n}\n\npi.version = VERSION;\npi.utils = _;\n","export const VERSION = '0.5.0'\n"]}